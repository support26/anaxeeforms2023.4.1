name: OIDC integration tests

on: push

jobs:
  oidc-integration-test:
    # TODO should we use the same container as circle & central?
    runs-on: ubuntu-latest
    services:
      # see: https://docs.github.com/en/enterprise-server@3.5/actions/using-containerized-services/creating-postgresql-service-containers
      postgres:
        image: postgres:14.6
        env:
          POSTGRES_PASSWORD: odktest
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18.17.0
        cache: 'npm'
    - run: npm ci --legacy-peer-deps
    - run: make fake-oidc-server-ci > fake-oidc-server.log &
    - run: node lib/bin/create-docker-databases.js
    - run: make test-oidc-integration
    - name: Fake OIDC Server Logs
      if: always()
      run: "! [[ -f ./fake-oidc-server.log ]] || cat ./fake-oidc-server.log"
